<h3>Tarefas</h3>

@*<table class="table">
    <thead>
        <tr>
            <th>Acao</th>
            <th>Data</th>
            <th>Descricao</th>
            <th>Concluida</th>
        </tr>
    </thead>
    <tbody>
        <ListaGenerica ListaItem="tarefas">
            <Carregando></Carregando>
            <SemRegistro></SemRegistro>
            <Lista Context="tarefa" >
                <TarefaIndividual tarefa="tarefa" RemoverTarefa="RemoveTarefa" />
            </Lista>
        </ListaGenerica>
    </tbody>
</table>*@

<Grid ListaItens="tarefas" Context="tarefa" Titem="Tarefa">
    <Cabecalho>
        <td>Data</td>
        <td>Descrição</td>
        <td>Concluída</td>
    </Cabecalho>
    <Itens>
        <td>@tarefa.DataCriacao.Date.ToString("dd/MM/yyyy")</td>
        <td>@tarefa.Descricao</td>
        <td>@tarefa.Concluida</td>
    </Itens>
</Grid>


@if (tarefas is not null)
{
    <div class="form-group">
        <label>Tarefa</label>
        <input type="text" placeholder="Informe a terefa" @bind="novaTarefa" />
        <button class="btn btn-primary" @onclick="AdicionarNovaTarefa">Registrar Tarefa</button>
    </div>
}

@code{

    [Parameter]
    public List<Tarefa> tarefas { get; set; }

    [Parameter]
    public string Titulo { get; set; }

    private string novaTarefa = "";

    void AdicionarNovaTarefa()
    {
        if (!string.IsNullOrWhiteSpace(novaTarefa))
        {
            tarefas.Add(new Tarefa
            {
                DataCriacao = DateTime.Now,
                Descricao = novaTarefa,
                ID = Guid.NewGuid()
            });
        }
        novaTarefa = "";
    }

    void RemoveTarefa(Tarefa tarefa)
    {
        tarefas.Remove(tarefas.First(x => x.ID == tarefa.ID));
    }
}